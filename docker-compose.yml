version: '3.4'


services:
  postgres_db:
    container_name: postgres_db
    image:
      postgres:13.4-alpine
    ports:
      - "5432:5432"
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "20m"
    env_file:
      - envs/database.env
    restart:
      on-failure
    networks:
      - pgdb

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 5050:80
    depends_on:
      - postgres_db
    networks:
      - pgdb

  backend:
    container_name: backend
    build:
      context: backend/
    command: bash -c "python /app/manage.py makemigrations && python /app/manage.py migrate --noinput && python /app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend/:/app
    ports:
      - 8000:8000
    depends_on:
      - postgres_db
    env_file:
      - envs/database.env
      - envs/backend.env
    restart:
      on-failure
    networks:
      - pgdb
      - front_back

  frontend:
    build:
      context: frontend/
    ports:
      - 80:80
    depends_on:
      - backend
    restart:
      on-failure
    networks:
      - front_back
      
  nginx:
    image: nginx:1.19.8-alpine
    depends_on:
      - frontend
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /nginx.conf:/etc/nginx/conf
      - etc-letsencrypt:/etc/letsencrypt
    networks:
      -app
      
  certbot:
    image: certbot/certbot
    depends_on: 
      - nginx
    container_name: certbot
    volumes:
      - etc-letsencrypt:/etc/letsencrypt
      - www-html:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --agree-tos --no-eff-email -d "ourdomen"

volumes:
  www-html:
  etc-letsencrypt:

networks:
  pgdb:
  front_back:
  app:
    driver: bridge